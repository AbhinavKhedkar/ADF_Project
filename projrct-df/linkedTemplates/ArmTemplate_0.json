{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "projrct-df"
		},
		"AzureDataLakeStorageCopyLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageCopyLS'"
		},
		"AzureDataLakeStorageCopyLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://project18adls.dfs.core.windows.net/"
		},
		"PostgresPasswordLS_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://ProjectKVault.vault.azure.net/"
		},
		"AzureDatabricksLS_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1206-073320-rjjtof1f"
		},
		"PostgreSqlLookupLS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"PostgreSqlLookupLS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Project-ADE-18-DB"
		},
		"PostgreSqlLookupLS_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "postgres"
		},
		"EventTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/af9870b9-f599-421b-a7ab-eb1ca6072c1a/resourceGroups/Project-ADE-18/providers/Microsoft.Storage/storageAccounts/project18adls"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageCopyLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageCopyLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageCopyLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgresPasswordLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('PostgresPasswordLS_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHoistedIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyTableADLSDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageCopyLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().TableName, '.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().SchemaName, '/', dataset().TableName)",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "feedback_id",
						"type": "UTF8"
					},
					{
						"name": "order_id",
						"type": "UTF8"
					},
					{
						"name": "feedback_score",
						"type": "INT32"
					},
					{
						"name": "feedback_form_sent_date",
						"type": "UTF8"
					},
					{
						"name": "feedback_answer_date",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageCopyLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1402013916734709.9.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "PostgresPasswordLS",
							"type": "LinkedServiceReference"
						},
						"secretName": "project-token"
					},
					"existingClusterId": "[parameters('AzureDatabricksLS_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PostgresPasswordLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSqlLookupLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSqlV2",
				"typeProperties": {
					"server": "[parameters('PostgreSqlLookupLS_properties_typeProperties_server')]",
					"port": 5432,
					"database": "[parameters('PostgreSqlLookupLS_properties_typeProperties_database')]",
					"username": "[parameters('PostgreSqlLookupLS_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "PostgresPasswordLS",
							"type": "LinkedServiceReference"
						},
						"secretName": "postgres-password"
					},
					"sslMode": 2,
					"authenticationType": "Basic"
				},
				"connectVia": {
					"referenceName": "SelfHoistedIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHoistedIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/PostgresPasswordLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSqlCopySourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PostgreSqlLookupLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PostgreSqlLookupLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSqlLookupDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PostgreSqlLookupLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PostgreSqlLookupLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/project-pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_from_postgres",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlV2Source",
								"query": "SELECT \n    table_schema AS SchemaName,\n    table_name AS TableName\nFROM \n    information_schema.tables \nWHERE\n    table_schema = 'ecommerce';"
							},
							"dataset": {
								"referenceName": "PostgreSqlLookupDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachForTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lookup_from_postgres",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lookup_from_postgres').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyTables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "PostgreSqlV2Source",
											"query": {
												"value": "@concat('select * from ', item().schemaname, '.', item().tablename)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "PostgreSqlCopySourceDS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CopyTableADLSDS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().schemaname",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEachForTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/abhinav@prashantmore879gmail.onmicrosoft.com/NoteBook1"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksLS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook2",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/abhinav@prashantmore879gmail.onmicrosoft.com/NoteBook2_Date_Conversion"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksLS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook3",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/abhinav@prashantmore879gmail.onmicrosoft.com/NoteBook3"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksLS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-06T07:49:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PostgreSqlLookupDS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLS')]",
				"[concat(variables('factoryId'), '/datasets/PostgreSqlCopySourceDS')]",
				"[concat(variables('factoryId'), '/datasets/CopyTableADLSDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "project-pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2024-12-09T09:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/project-pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EventTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "project-pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/bronze/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('EventTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/project-pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TumblingTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "project-pipeline",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 1,
					"startTime": "2024-12-14T09:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/project-pipeline')]"
			]
		}
	]
}